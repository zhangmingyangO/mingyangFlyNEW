<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neusoft.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.neusoft.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="pic_path" property="picPath" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="weibo" property="weibo" jdbcType="VARCHAR" />
    <result column="vip_grade" property="vipGrade" jdbcType="INTEGER" />
    <result column="kiss_num" property="kissNum" jdbcType="INTEGER" />
    <result column="join_time" property="joinTime" jdbcType="TIMESTAMP" />
    <result column="isadmin" property="isadmin" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, email, nickname, passwd, city, sign, sex, pic_path, qq, weibo, vip_grade, kiss_num, 
    join_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tab_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tab_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neusoft.domain.User" >
    insert into tab_user (id, email, nickname, 
      passwd, city, sign, 
      sex, pic_path, qq, weibo, 
      vip_grade, kiss_num, join_time
      )
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{passwd,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{picPath,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{weibo,jdbcType=VARCHAR}, 
      #{vipGrade,jdbcType=INTEGER}, #{kissNum,jdbcType=INTEGER}, #{joinTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neusoft.domain.User" >
    insert into tab_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="picPath != null" >
        pic_path,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="weibo != null" >
        weibo,
      </if>
      <if test="vipGrade != null" >
        vip_grade,
      </if>
      <if test="kissNum != null" >
        kiss_num,
      </if>
      <if test="joinTime != null" >
        join_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="picPath != null" >
        #{picPath,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="vipGrade != null" >
        #{vipGrade,jdbcType=INTEGER},
      </if>
      <if test="kissNum != null" >
        #{kissNum,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null" >
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neusoft.domain.User" >
    update tab_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="picPath != null" >
        pic_path = #{picPath,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="vipGrade != null" >
        vip_grade = #{vipGrade,jdbcType=INTEGER},
      </if>
      <if test="kissNum != null" >
        kiss_num = #{kissNum,jdbcType=INTEGER},
      </if>
      <if test="joinTime != null" >
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neusoft.domain.User" >
    update tab_user
    set email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      pic_path = #{picPath,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      vip_grade = #{vipGrade,jdbcType=INTEGER},
      kiss_num = #{kissNum,jdbcType=INTEGER},
      join_time = #{joinTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByEmail" parameterType="String" resultMap="BaseResultMap">
    select * from tab_user where email=#{value};
  </select>
  <select id="selectByEmailAndPass" parameterType="User" resultMap="BaseResultMap">
    select * from tab_user where email=#{email} and passwd = #{passwd};
  </select>
  <select id="selectByNickname" parameterType="String" resultMap="BaseResultMap">
    select * from tab_user where nickname=#{value};
  </select>

  <select id="getTotalCounts" resultType="int">
      select count(*) as num from tab_user
  </select>

  <select id="getPagedUser" parameterType="PageInfo" resultType="User">
      select * from tab_user limit #{pageStart},#{pageSize}
  </select>
  <select id="selectByTopicUserId" parameterType="int" resultType="map">
SELECT  tab_topic.create_time,tab_topic.id AS topicid,tab_topic.title,tab_user.id AS useridd ,tab_topic.comment_num,tab_topic.view_times
FROM tab_user JOIN tab_topic ON tab_user.id = tab_topic.userid
WHERE tab_user.id=#{value}
ORDER BY tab_topic.create_time DESC
  </select>
  <select id="selectByTopicUserIdcount" resultType="int" parameterType="int">
 SELECT COUNT(tab_topic.id) AS counttopicid
 FROM tab_user JOIN tab_topic ON tab_user.id = tab_topic.userid
WHERE tab_user.id=#{value }
  </select>

</mapper>